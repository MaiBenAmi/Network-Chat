import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;
import javax.swing.text.DefaultCaret;

public class ClientWindow extends JFrame implements Runnable{
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTextField message_textfield;
	private JTextArea history_JTextArea;
	private DefaultCaret caret;
	
	private Client client;
	
	private Thread listen, run;
	
	private boolean running = false;
	
	public ClientWindow(String name, String ipAddress, int port) {
		setTitle("Mai's Chat");
		this.client = new Client(name, ipAddress, port);
		
		boolean connectionStatus = client.OpenConnection(ipAddress);
		if(!connectionStatus){
			System.err.println("Connection failed");
			Console("Connected failed");
		}
		CreateWindow();
		String connection = "/c/" +name;
		running = true;
		client.Send(connection.getBytes());		
		run = new Thread(this,"Running");
		run.start();
		
	}
	
	private void CreateWindow(){
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		} 
		catch (Exception e) {
			e.printStackTrace();
		} 
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(880, 550);
		setLocationRelativeTo(null);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		GridBagLayout gbl_contentPane = new GridBagLayout();
		gbl_contentPane.columnWidths = new int[]{28, 815, 30, 7};
		gbl_contentPane.rowHeights = new int[]{35, 475, 40};
		gbl_contentPane.columnWeights = new double[]{1.0, 1.0};
		gbl_contentPane.rowWeights = new double[]{1.0, Double.MIN_VALUE};
		contentPane.setLayout(gbl_contentPane);
		
		history_JTextArea = new JTextArea();
		history_JTextArea.setEditable(false);
		GridBagConstraints gbc_history_JTextArea = new GridBagConstraints();
		gbc_history_JTextArea.insets = new Insets(10, 5, 0, 0);
		gbc_history_JTextArea.fill = GridBagConstraints.BOTH;
		gbc_history_JTextArea.gridx = 0;
		gbc_history_JTextArea.gridy = 0;
		gbc_history_JTextArea.gridwidth = 3;
		gbc_history_JTextArea.gridheight = 2;
		caret = (DefaultCaret) history_JTextArea.getCaret();
		caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
		JScrollPane scroll = new JScrollPane(history_JTextArea);
		contentPane.add(scroll, gbc_history_JTextArea);
		
		message_textfield = new JTextField();
		message_textfield.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {
				if(e.getKeyCode() == KeyEvent.VK_ENTER){ // If the pressed key is 'Enter'
					Send(message_textfield.getText());
				}
			}
		});
		GridBagConstraints gbc_message_textfield = new GridBagConstraints();
		gbc_message_textfield.insets = new Insets(0, 0, 0, 5);
		gbc_message_textfield.fill = GridBagConstraints.HORIZONTAL;
		gbc_message_textfield.gridx = 0;
		gbc_message_textfield.gridy = 2;
		gbc_message_textfield.gridwidth = 2;
		contentPane.add(message_textfield, gbc_message_textfield);
		message_textfield.setColumns(10);
		
		JButton send_button = new JButton("Send");
		send_button.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent e){
				Send(message_textfield.getText());
			}
		});
		GridBagConstraints gbc_send_button = new GridBagConstraints();
		gbc_send_button.insets = new Insets(0, 0, 0, 5);
		gbc_send_button.gridx = 2;
		gbc_send_button.gridy = 2;
		contentPane.add(send_button, gbc_send_button);
		
		
		message_textfield.requestFocusInWindow();
		
		addWindowListener(new WindowAdapter(){
			public void windowClosing(WindowEvent e){
				System.out.println("Closed");
			}
		});
		
		setVisible(true);
	}
	
	public void Console(String msg){
		history_JTextArea.append(msg + "\n");
	}
	
	private void Send(String msg){
		if(msg.equals(""))
			return;
		msg = client.GetName() + ": " + msg;
		msg = "/m/" + msg;
		client.Send(msg.getBytes());
		message_textfield.setText("");
	}
	
	public void Listen(){
		listen = new Thread("Listen"){
					public void run(){
						while(running){
							String message = client.Receive();
							if(message.startsWith("/c/")){
								//client.SetID(Integer.parseInt(message.substring(3, message.length())));
								client.SetID(Integer.parseInt(message.split("/c/|/e/")[1]));
								Console("Successfully connected to server! ID: " + client.GetID());
							}
							else if(message.startsWith("/m/")){
								String text = message.split("/m/|/e/")[1];
								Console(text);
							}
						}	
					}
		};
		listen.start();
	}

	@Override
	public void run() {
		Listen();		
	}
}
